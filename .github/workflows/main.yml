name: NetSec CI/CD Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [main]

jobs:
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name:  Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name:  Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Integration Tests
        run: |
          echo "Running integration tests..."
          # Replace this with your actual test command, e.g.:
          pytest tests/integration

  deploy-to-ecr:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    needs: integration  # This job runs only if the integration job succeeds
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Only run on push to main, not on PRs

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest